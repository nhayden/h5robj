library(IRanges)
example(IRanges)
d
x
start(x)
class(start(x))
library(OnDiskGRanges)
library(RUnit)
names(x)
attributes(x)
a <- NULL
attributes(a)
a
as.character(a)
x2 <- x
attr(x2, 'NAMES') <- NULL
x2
attr(x2, 'NAMES') <- 'NULL'
x2
attr(x2, 'NAMES') <- as.name('NULL')
x2
attr(x2, 'NAMES') <- as.name('\001NULL\001')
x2
attributes(x2)
x
attributes(x)
names(x)
as.characternames(x))
as.character(names(x))
x
attributes(x)
elementType(x)
metadata(x)
class(metadata(x))
isS4(metadata(x))
attributes(IRanges())
new("IRanges", start=1:5, width=10:6, names=letters[1:5])
new("IRanges", start=1:5, width=10:6)
attributes(new("IRanges", start=1:5, width=10:6))
ls()
example(data.frame)
x
d
str(d)
names(d)
dput(d)
is.list(d)
attributes(d)
for(elt in d) { print(elt) }
as.list(d)
x = as.list(d)
x
attributes(d)
attributes(x) = attributes(d)
x
dput(x)
attributes(d)
dput(d)
m = matrix(1:10, 3, dimnames=list(c("A",  "B", "C"), NULL))
m = matrix(1:12, 3, dimnames=list(c("A",  "B", "C"), NULL))
m
dput(m)
attributes(m)
is(m, "vector")
is(d, "vector")
is(m, "vector")
as.vector(m)
v = as.vector(m)
attributes(v) = attributes(m)
v
list(NULL, NULL)
c(NULL, NULL)
c(1, NULL, 2)
.A = setClass("A", representation(x="numeric"))
.A(x=1:5)
a = .A(x=1:5)
str(a)
dput(a)
a
attributes(a)
dput(a)
getMethod("initialize", "A")
selectMethod("initialize", "A")
selectMethod("initialize", "ANY")
init = selectMethod("initialize", "ANY")
new
getClasss("A")
getClass("A")
value = .Call(methods:::C_new_object, getClass("A"))
value
.Object = .Call(methods:::C_new_object, getClass("A"))
init(.Object, x=1:5)
init(getClass("A"), x=1:5)
init(getClassDef("A"), x=1:5)
getClass("A")@prototype
.Call(methods:::C_new_object, getClass("A"))
as.namae()
requireNamespace("xyz")
requireNamespace("xyz", quietly=TRUE)
xx = requireNamespace("xyz", quietly=TRUE)
xx
if (!requireNamespace("xyz", quietly=TRUE))  stop("can't decode")
if (!requireNamespace("xyz", quietly=TRUE))  stop("can't decode object from pkg 'xyz'")
if (!requireNamespace("IRanges", quietly=TRUE))  stop("can't decode object from pkg 'xyz'")
?getClass
getClass("A", where=getNamespace("IRanges"))
savehistory(file="~/git/rhdf5/object_construction_fu.Rhistory")
